name: 'Publish'

on:
  workflow_dispatch:
    inputs:
      suffix:
        type: string
        required: false
        default: ''
        description: 'Suffix/Release type'

permissions:
  contents: write
  statuses: write

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true

      - name: 'Set up JDK 17'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 'Build with Gradle'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          cache-read-only: false

      - name: 'Move artifacts'
        shell: bash
        run: |
          mkdir artifacts
          cp Fabric/build/libs/*.jar artifacts
          cp Forge/build/libs/*.jar artifacts
          cp NeoForge/build/libs/*.jar artifacts

      - name: 'Upload artifacts'
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: 'Artifacts'
          path: artifacts/*

  changelog:
    name: 'Generate changelog'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true

      - name: 'Set up JDK 17'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 'Generate changelog with Gradle'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: makeChangelog
          cache-read-only: false

      - name: 'Upload changelog'
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: 'Changelog'
          path: Changelog/changelog.*

  publish:
    name: 'Publish'
    runs-on: ubuntu-latest

    needs: [build, changelog]

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true

      - name: 'Set up JDK 17'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 'Download changelog'
        uses: actions/download-artifact@v3
        with:
          name: 'Changelog'
          path: Changelog/

      - name: 'Publish with Gradle'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishMod
          cache-read-only: false
        env:
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}

  release:
    name: 'Create release'
    runs-on: ubuntu-latest

    needs: [build, changelog, publish]

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true

      - name: 'Get latest tag'
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: '0.0.0.0'

      - name: 'Download changelog'
        uses: actions/download-artifact@v3
        with:
          name: 'Changelog'
          path: Changelog/

      - name: 'Replace version in changelog'
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: Changelog/**
          find: "${version}"
          replace: "`${{ steps.latest-tag.outputs.tag }}${{ inputs.suffix }}`"
          regex: false

      - name: 'Download artifacts'
        uses: actions/download-artifact@v3
        with:
          name: 'Artifacts'
          path: artifacts/

      - name: 'Create release'
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ github.event.repository.name }}-${{ github.ref_name }}-${{ steps.latest-tag.outputs.tag }}${{ inputs.suffix }}"
          tag_name: ${{ steps.latest-tag.outputs.tag }}
          target_commitish: ${{ github.ref }}
          body_path: Changelog/changelog.md
          files: artifacts/*

      - name: 'Upload changelog'
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: Changelog
          path: Changelog/changelog.**